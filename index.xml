<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Delphier.com on Delphier.com</title><link>https://www.delphier.com/</link><description>Recent content in Delphier.com on Delphier.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 29 Aug 2019 02:27:57 +0800</lastBuildDate><atom:link href="https://www.delphier.com/" rel="self" type="application/rss+xml"/><item><title>Git Reset 误操作后恢复数据</title><link>https://www.delphier.com/posts/2019/git-reset-recover/</link><pubDate>Thu, 29 Aug 2019 02:27:57 +0800</pubDate><guid>https://www.delphier.com/posts/2019/git-reset-recover/</guid><description>&lt;p&gt;运行 &lt;code&gt;git reset&lt;/code&gt; 后，在 SmartGit 里点了 Discard，而没有 Save Stash，结果发现刚刚建立的新文件全都没了，搜索了一圈发现是可以恢复的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先运行 &lt;code&gt;git reflog&lt;/code&gt; 命令查看所有的 HEAD 日志。&lt;/li&gt;
&lt;li&gt;记住你要恢复的那次 commit 的 7 位记录号。&lt;/li&gt;
&lt;li&gt;运行 &lt;code&gt;git reset --hard xxxxxxx&lt;/code&gt;， xxxxxxx 为刚才的记录号。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;OK，数据回来了！&lt;/p&gt;</description></item><item><title>使用 Cloudflare 进行 301 重定向</title><link>https://www.delphier.com/posts/2019/cloudflare-301-redirect/</link><pubDate>Thu, 29 Aug 2019 01:05:15 +0800</pubDate><guid>https://www.delphier.com/posts/2019/cloudflare-301-redirect/</guid><description>&lt;p&gt;使用 Cloudflare 可以将不带 www 的所有链接重定向到 www，或者反之将带 www 的所有链接重定向到不带 www 的裸域名，同时还可以包含子路径。&lt;/p&gt;
&lt;p&gt;方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先将域名的 DNS 服务器设置为 Cloudflare 的服务器，服务器名后台有说明。&lt;/li&gt;
&lt;li&gt;在后台的 DNS 页将域名的 @ 子域和 www 域都添加 A 记录或 CNAME 记录，比如你使用的 GitHub Pages，可以添加 CNAME 记录为 username.github.io，一定都要添加，否则不生效。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 Page Rules 页添加页面规则，比如将不带 www 的 &lt;a href=&#34;https://delphier.com/xxxx/xxxx/&#34;&gt;https://delphier.com/xxxx/xxxx/&lt;/a&gt; 所有链接重定向到带 www 的 &lt;a href=&#34;https://www.delphier.com/xxxx/xxxx/&#34;&gt;https://www.delphier.com/xxxx/xxxx/&lt;/a&gt; ，重定向包含子路径，点 Create Page Rule 后如下设置：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;URL Matches&lt;/strong&gt;: delphier.com/*&lt;br /&gt;
&lt;strong&gt;Settings&lt;/strong&gt;: Forwarding URL&lt;br /&gt;
&lt;strong&gt;Status Code&lt;/strong&gt;: 301 Permanent Redirect&lt;br /&gt;
&lt;strong&gt;Destination URL&lt;/strong&gt;: &lt;a href=&#34;https://www.delphier.com/$1&#34;&gt;https://www.delphier.com/$1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>使用 Hugo 建立站点并部署到 GitHub Pages</title><link>https://www.delphier.com/posts/2019/hugo-github-pages/</link><pubDate>Tue, 30 Jul 2019 23:01:41 +0800</pubDate><guid>https://www.delphier.com/posts/2019/hugo-github-pages/</guid><description>
&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; 是一个开源的静态站点生成器，使用 Golang 编写，它的包只是一个简单的可执行文件，不需要安装其它依赖，使用简单，构建站点速度非常快且有很高的灵活性。Hugo 安装运行在本地电脑上，撰写内容并生成静态文件后，可以部署到自己的服务器或者 &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;。本文以 Windows 环境为例介绍使用及发布的全过程。&lt;/p&gt;
&lt;h2 id=&#34;安装-hugo&#34;&gt;安装 Hugo&lt;/h2&gt;
&lt;p&gt;到 &lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34;&gt;Hugo Releases@Github&lt;/a&gt; 下载最新的安装包 &lt;code&gt;hugo_0.56.3_Windows-64bit.zip&lt;/code&gt;，如果你的 Hugo 主题使用到了 Sass/SCSS，下载带 &lt;code&gt;Extended&lt;/code&gt; 字样的安装包：&lt;code&gt;hugo_extended_0.56.3_Windows-64bit.zip&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;解压安装包后，将 Hugo.exe 放到你想要的文件夹，比如 D:\Apps\Hugo\Hugo.exe，同时将此文件夹添加到系统 PATH 环境变量。&lt;/p&gt;
&lt;h2 id=&#34;建立站点&#34;&gt;建立站点&lt;/h2&gt;
&lt;p&gt;选定一个文件夹来存储站点文件，如 D:\Sites，在此文件夹下运行以下命令建立站点：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo new site MySite
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hugo 将在 D:\Sites\MySite 下生成站点，里面自动生成的目录和文件都有特定作用：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;content // 最终站点的内容，此文件夹的目录结构即为最终站点的目录结构；
static // 最终站点的静态文件，如 favicon.ico 及图片文件等；
themes // 存放主题
config.toml // 站点配置文件
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;设置站点&#34;&gt;设置站点&lt;/h2&gt;
&lt;p&gt;通过修改 &lt;code&gt;config.toml&lt;/code&gt; 来配置站点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt; 站点主题：下载喜欢的主题放到站点 &lt;code&gt;themes&lt;/code&gt; 文件夹下，一个主题一个文件夹，文件夹名就是主题名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;publishDir&lt;/code&gt; 发布目录：最终静态站点的存储位置，默认是站点目录下的 &lt;code&gt;public&lt;/code&gt;，例如发布到 GitHub Pages，可更改为 &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其它的属性参考官方文档，或者主题的文档。&lt;/p&gt;
&lt;h2 id=&#34;添加站点内容&#34;&gt;添加站点内容&lt;/h2&gt;
&lt;p&gt;在站点目录下运行以下命令为站点添加内容：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo new posts/2019/hello-hugo.md
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;hugo new&lt;/code&gt; 后面的参数就是文章的路径，存储在站点 &lt;code&gt;content&lt;/code&gt;文件夹里面，以上命令生成的内容路径为：D:\Sites\MySite\content\posts\2019\hello-hugo.md。&lt;/p&gt;
&lt;h2 id=&#34;预览站点&#34;&gt;预览站点&lt;/h2&gt;
&lt;p&gt;可以启动本地 Hugo 服务器来实时预览编辑文章后的站点效果：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo server -D // -D 参数：包含状态为草稿的文章。修改文章的 draft: false 可更改草稿状态。
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;发布站点&#34;&gt;发布站点&lt;/h2&gt;
&lt;p&gt;生成最终静态站点：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;部署到-github-pages&#34;&gt;部署到 GitHub Pages&lt;/h2&gt;
&lt;p&gt;生成的静态站点可以部署到自己的服务器，也可以部署到 &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; 这样的静态文件托管服务，方法很简单，将生成的静态站点 Push 到 &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; 仓库即可。&lt;/p&gt;
&lt;p&gt;部署到 GitHub Pages 需要注意以下几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;建立 &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; 时，仓库必须为公共库，私有库是无法使用 Pages 的。&lt;/li&gt;
&lt;li&gt;在 GitHub Pages 绑定自定义域名并强制 HTTPS 后，如果没有生效，你可以试着关闭浏览器重新打开，或者清空浏览器 DNS 缓存试一下。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其它&#34;&gt;其它&lt;/h2&gt;
&lt;p&gt;建议将站点进行 Git 版本控制，同时将 theme 和 publishDir 添加为子模块，方便更新与管理：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule add https://github.com/.........
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;参考资料：&lt;br /&gt;
&lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34;&gt;Hugo 文档：Quick Start&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://inside.getambassador.com/creating-and-deploying-your-first-hugo-site-to-github-pages-1e1f496cf88d&#34;&gt;Creating and deploying your first Hugo site to Github pages&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Hello Hugo!</title><link>https://www.delphier.com/posts/2019/hello-hugo/</link><pubDate>Tue, 30 Jul 2019 22:01:41 +0800</pubDate><guid>https://www.delphier.com/posts/2019/hello-hugo/</guid><description>&lt;p&gt;Hello Hugo!&lt;/p&gt;
&lt;p&gt;时间过得真快，间隔十年，重新开始写博客。
旧博客数据由 WordPress 迁移到了 Hugo。&lt;/p&gt;</description></item><item><title>Faceker.com 停止更新</title><link>https://www.delphier.com/posts/2009/faceker-end/</link><pubDate>Thu, 22 Oct 2009 00:00:00 +0000</pubDate><guid>https://www.delphier.com/posts/2009/faceker-end/</guid><description>&lt;p&gt;准备彻底终止 faceker.com，写了两年 BLOG，试验结束，网站停止更新并注销。&lt;/p&gt;
&lt;p&gt;听说 fanfou 最近可能要复活，所以如果对 DxAutoInstaller 新版本感兴趣的朋友可以跟踪 &lt;a href=&#34;http://fanfou.com/express。&#34;&gt;http://fanfou.com/express。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;BYE.&lt;/p&gt;</description></item><item><title>DevExpress VCL Auto-Installer v1.81</title><link>https://www.delphier.com/posts/2009/devexpress-vcl-auto-installer-v181/</link><pubDate>Mon, 07 Sep 2009 00:00:00 +0000</pubDate><guid>https://www.delphier.com/posts/2009/devexpress-vcl-auto-installer-v181/</guid><description>&lt;p&gt;v1.81 小小改动如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持 Delphi 2010；&lt;/li&gt;
&lt;li&gt;配置文件新增了 v46 新的 4 个 Skin。
另外，ExpressLayoutControl 和 ExpressPrintingSystem 都有了新版本，不过是 Beta 版，所以未做更新。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个小工具已经停止更新好久了，因为很早就计划重新开发一个新版本，支持组件选择性安装以及依赖性检查，支持插件机制，可以成为 EhLib、FastReport 等组件的通用安装程序，不过手头事情多多，计划毫无进展。:(&lt;/p&gt;
&lt;p&gt;另外，每次发布，总有几十条留言反馈安装有问题，在此列个 FAQ，供朋友们参考，不保证能解决所有人的问题 🙁&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q：DxAutoInstaller 到底能不能用呀？为啥每次我都搞不成功？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A：首先我可以保证绝对能用 🙂 这个小工具最开始是我自用的，到现在也是，每次都用它安装，次次成功&lt;del&gt;，呵呵&lt;/del&gt; 不过有几点说明：&lt;/p&gt;
&lt;p&gt;v1.8 之前的版本测试环境为 Delphi 2007\2009，其它的 Delphi 版本未做测试，v1.81 以后则是 2007 和 2010；
我不用精简版的 Delphi 🙂
不支持 C++Builder，主要是没有测试环境；
Vista 支持，Win7 没做测试。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q：DxAutoInstaller 怎么用啊？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A：DxAutoInstaller 主要有三个功能：解压、安装、卸载，下面逐个道来：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解压&lt;/strong&gt;：用 DevExpress 比较资深的朋友应该都知道，早期流出的 DevExpress 安装文件都是 SSG 这个组织的，此组织的文件有个特点就是文件层层压缩成若干小小文件。SSG 的 DevExpress 包也一样，有若干的压缩卷，解压起来那叫一个累啊，DxAutoInstaller 最早就是为此而生，会把这样的压缩包解压成标准的 DevExpress 安装目录结构。不过，现在 SSG 很少出 DevExpress 的东西了，目前的 DevExpress 安装包多是正常压缩，所以“解压”功能现在很少能用到，一般手动解压就可以了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装&lt;/strong&gt;：Delphi 组件安装的原理就是调用 Delphi 编译器 dcc32.exe 编译 *.dpk 文件。DxAutoInstaller 的组件安装较为“单纯”，并不会去做额外的工作，只是“模拟”手动安装而已，具体编译哪些文件以及其编译顺序请看安装目录下的 Packages.ini 文件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;卸载&lt;/strong&gt;：这个不用多说了，就是自动搜索已安装的 DevExpress 组件并将其卸掉，不管之前已安装的组件是否是用 DxAutoInstaller 安装的，如果之前的组件是用 DxAutoInstaller 安装的，那么安装时添加的库搜索路径和环境变量也会自动为你移除。另外，在每次安装进行之前，程序也会自动执行一次卸载，原因大家都知道。&lt;/p&gt;
&lt;p&gt;明白以上三点，具体使用根据界面提示选择即可。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q：我安装了，安装过程无报错，IDE 启动时提示包未找到，相应的 .bpl 也搜索不到，为啥子？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A：这是老问题，原因就是你的 Delphi 是试用版，因为在试用版状态下，dcc32 是无法使用的，不过编译不会报错，但编译器不会生成目标文件。&lt;/p&gt;
&lt;p&gt;你可以看一下安装目录\Delphi x Library\LogOutput.txt 文件，看是否有如下行：Command line tools are not supported in the trial version.&lt;/p&gt;
&lt;p&gt;另外你可以看一下你的 dcc32.exe 是否尺寸过小以及 Delphi 是否包含源码，无源码肯定是试用版了。&lt;/p&gt;
&lt;p&gt;解决方案就是用正确的 SN 或 Slip 文件重新安装 Delphi。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q：为什么生成 Delphi x Library 目录？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A：DevExpress 有近 30 种组件，如按照正常目录安装，您需要将这些组件相应的约 30 个 source 目录都添加到 Delphi 的库搜索路径中，麻烦可想而知。&lt;/p&gt;
&lt;p&gt;DxAutoInstaller 会将要安装组件相应的 Package 和 Source 都集中到一个目录，如果你用的是 Delphi 2010，生成的目录就是 Delphi 2010 Library，另外，dcc32 产生的 bpl 文件也会在此目录下，搜索路径只需添加此一目录即可，当然，安装程序会自动添加的。&lt;/p&gt;
&lt;p&gt;这样做不会有问题吗？绝对不会。DevExpress 官方的安装程序 ExpressInstall 也是这样搞的。&lt;/p&gt;
&lt;p&gt;先写这些，有时间再补充补充~&lt;/p&gt;</description></item><item><title>Delphi 2010 Build 3494：New Splash and Icon</title><link>https://www.delphier.com/posts/2009/delphi-2010-build-3494/</link><pubDate>Wed, 29 Jul 2009 00:00:00 +0000</pubDate><guid>https://www.delphier.com/posts/2009/delphi-2010-build-3494/</guid><description>&lt;p&gt;最新的 3494（3478 未试用），最大的变化就是有了新的 Splash 和 Icon，主界面工具栏平面化了，IDE Insight 现在是模式窗口，另外 &lt;a href=&#34;https://www.delphier.com/posts/2009/delphi-2010-build-3449/&#34;&gt;3449 里提到的组件工具栏&lt;/a&gt;被取消。&lt;/p&gt;
&lt;p&gt;与 Delphi 2007 和 Delphi 2009 相比，Delphi 2010 的 IDE 明显变慢，尤其是在 Form Designer 上；另外某些窗口默认尺寸变小，缺乏美感。&lt;/p&gt;
&lt;p&gt;还有很多细小变化，比如 Format Source 的缺省风格，很多组件都有了新的属性，比如 Touch 属性，等等，不多说了，上几张图吧：&lt;/p&gt;
&lt;p&gt;这是 Setup.exe，新的图标，很漂亮吧 🙂&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-3494-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;下面是安装后的开始菜单，安装程序界面、默认安装目录以及 IDE 的很多地方 CodeGear 字样都改成为 Embarcadero：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-3494-2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;下面是 Splash，黑色的，安装程序也是黑色的了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-3494-3.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;来张 About，显示的版本号是：version 14.0.3494.23552：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-3494-4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;下图是主界面与 Delphi 2009 的对比：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-3494-5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;IDE Insight，快捷键 F6，现在是模式窗口了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-3494-6.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;就这些，期待下一个 Build。&lt;/p&gt;</description></item><item><title>Delphi 2010 Build 3449 的新功能</title><link>https://www.delphier.com/posts/2009/delphi-2010-build-3449/</link><pubDate>Wed, 24 Jun 2009 00:00:00 +0000</pubDate><guid>https://www.delphier.com/posts/2009/delphi-2010-build-3449/</guid><description>&lt;p&gt;Delphi 2010 Beta 目前似乎是每月一个 Build，每个 Build 都有很多新功能和改进。&lt;/p&gt;
&lt;p&gt;首先 Build 3449 的安装程序有细微变化，输入 SN 方便多了，呵呵~~&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-3449-01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;安装程序除了启动时选择安装语言外，还有一个选择语言的界面，而且是多选，是不是说以后的 IDE 可以进行语言切换？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-3449-02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;正常安装，看看 About，显示的版本号是：Delphi 2010 Version 14.0.3449.21988&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-3449-03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;来看看此 Build 一个可喜的变化，就是组件面板可以像 Delphi 7 及以前版本那样做为工具栏显示了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-3449-04.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这种显示风格虽然占用一些空间，但是确实是非常方便，尤其现在多是宽屏，切换组件页真是快速明了啊~&lt;/p&gt;
&lt;p&gt;默认是不启用的，右键工具栏选择“Component”可显示，显示后原来的工具栏面板并不会消息，而是和此面板同步，不过目前版本性能差些，拖放切换非常慢，有待改进。&lt;/p&gt;
&lt;p&gt;上一 Build 有一个功能 Fast Action，而且在 IDE 很多地方应用了，此 Build 有所改进，不过改名叫 IDE Insight 了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-3449-05.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此 Build 还添加了手势组件，可通过鼠标或触摸屏自定义手势，此功能似乎不是只有 Win7 才可用，XP 及以前版本应该也是可以的，用此组件实现 Opera 和 Firefox 插件的鼠标手势功能应该不成问题。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-3449-06.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;添加了触摸键盘组件，以后再也不用到处找虚拟键盘组件了，做触摸屏程序的同学们有福了，不过是日文的~~&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-3449-07.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Object Inspector 下方显示了帮助区域，此区域以前版本就有，但未显示，应该是用来显示属性帮助的，如果某组件有右键菜单，还会增加一区域来显示菜单项：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-3449-08.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;DBExpress 终于内置了 Firebird 驱动：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-3449-09.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;DBGrid、StringGrid、DrawGrid 绘制风格有所变化，看起来比以前漂亮多了，不过标题总多出一根竖线，不知是为什么：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-3449-10.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;还有Build 3417 里就有了的源码格式化工具，代码编辑器右键 Format Source 可启动。虽然在 Tools – Options 里有格式化选项，但此功能默认的格式化风格真是差强人意：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-3449-11.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;总之，改进多多，看来 Delphi 真是要奋发图强了~~~ 🙂&lt;/p&gt;</description></item><item><title>DevExpress VCL Auto-Installer v1.8 发布</title><link>https://www.delphier.com/posts/2009/dxautoinstaller-v18-released/</link><pubDate>Fri, 19 Jun 2009 00:00:00 +0000</pubDate><guid>https://www.delphier.com/posts/2009/dxautoinstaller-v18-released/</guid><description>&lt;p&gt;DevExpress VCL Build v44 变化较大，所以更新了一下配置文件至 v1.8：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将 ExpressQuantumTreeList v4 升级到了 ExpressQuantumTreeList v5；&lt;/li&gt;
&lt;li&gt;ExpressLayout Control 有了 v2 版本，但因是 Beta，所以此版本未做更新；&lt;/li&gt;
&lt;li&gt;取消了 ExpressMasterView，DevExpress 也已放弃该组件，其功能其它组件可替代。&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Delphi 2009 Update 3 和 Update 4 发布</title><link>https://www.delphier.com/posts/2009/delphi-2009-update3-and-update4/</link><pubDate>Thu, 28 May 2009 00:00:00 +0000</pubDate><guid>https://www.delphier.com/posts/2009/delphi-2009-update3-and-update4/</guid><description>&lt;p&gt;自从知道有 Delphi 2010 后，就对 Delphi 2009 的这两个 Update 不是太有兴趣了。&lt;/p&gt;
&lt;p&gt;修复 Bug 较多，Update 4 是专门针对数据库的更新包：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://edn.embarcadero.com/article/39387&#34;&gt;Update 3 修复列表&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://edn.embarcadero.com/article/39392&#34;&gt;Update 4 修复列表&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Release Notes 在这里：&lt;a href=&#34;http://edn.embarcadero.com/article/39390&#34;&gt;http://edn.embarcadero.com/article/39390&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装后的 Delphi 2009 版本号为：Version 12.0.3420.21218。&lt;/p&gt;</description></item><item><title>Delphi 2010 Build 3417</title><link>https://www.delphier.com/posts/2009/delphi-2010-build-3417/</link><pubDate>Sat, 16 May 2009 00:00:00 +0000</pubDate><guid>https://www.delphier.com/posts/2009/delphi-2010-build-3417/</guid><description>&lt;p&gt;此 Build 安装后的版本号为 Delphi 2010 v14.0.3417.21151。Check for Updates 检查不到更新，所以卸载后重新用最新的 Setup.exe 安装的，本来想看一下 Firebird for DBExpress，不过数据库包不知怎么的未能安装成功。&lt;/p&gt;
&lt;p&gt;3417 最大的变化是添加了一个“Fast Action”功能，以及由此而带来的其它改变。&lt;/p&gt;
&lt;p&gt;Fast Action 就是将 IDE 所有的命令都可搜索化，包含 IDE 的菜单项、环境选项、Project Options、最近文件及项目、组件等等，第三方也可注册自己的 Actions；有点类似 Vista 和 Windows 7 中的搜索。&lt;/p&gt;
&lt;p&gt;Fast Action 在 Search 菜单下，快捷键是 Ctrl+Shift+F3，显示为一个非模式的浮动界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi-2010-build-3417-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;试了一下，效果不错，组件也在可搜索内容之列，比如说搜索“ado”的效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi-2010-build-3417-2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;受“Fast Action”的“影响”，IDE 的 View Form、View Unit 也变了，界面和 Fast Action 的界面一致，下面是 View Form 的效果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi-2010-build-3417-3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;另外受影响的还有 Use Unit 功能，效果同上，都变成非模式的浮动界面了，现在的 Use Unit 可以选择是添加到 Interface 部分还是 Implementation 部分：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi-2010-build-3417-4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;上个 Build 3391 拥有了 Boolean 属性编辑器，其实 DateTime 也有了属性编辑器：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi-2010-build-3417-5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最近的 Delphi Live 2009 正在进行，Embarcadero 展望了未来 Delphi 的新功能，MacOS、Linux、Mobile 支持在列，口号是 Native Delphi Anywhere……&lt;/p&gt;
&lt;p&gt;真要这样，那就牛x了，这一天快点到来吧……&lt;/p&gt;</description></item><item><title>Anders Hejlsberg 将回到 Embarcadero？</title><link>https://www.delphier.com/posts/2009/anders-hejlsberg-return-to-embarcadero/</link><pubDate>Wed, 06 May 2009 00:00:00 +0000</pubDate><guid>https://www.delphier.com/posts/2009/anders-hejlsberg-return-to-embarcadero/</guid><description>&lt;p&gt;昨天就看到了这个极不靠谱的消息，无奈最近 Blog 挂了，今天发上来：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Delphi及C#的架构者Anders将于下个月回到Embarcadero，同时他将负责Delphi在移动平台方面的架构工作。&lt;/p&gt;
&lt;p&gt;今天，在微软的朋友得到这么一条消息。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原贴在此：&lt;a href=&#34;http://groups.google.com/group/pongba/browse_thread/thread/627c51a70f078442/&#34;&gt;http://groups.google.com/group/pongba/browse_thread/thread/627c51a70f078442/&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Delphi 将更改 Logo 图标？</title><link>https://www.delphier.com/posts/2009/new-delphi-icons/</link><pubDate>Mon, 27 Apr 2009 00:00:00 +0000</pubDate><guid>https://www.delphier.com/posts/2009/new-delphi-icons/</guid><description>&lt;p&gt;刚才无意间发现的，Delphi、C++Builder、Delphi for PHP 都有了新的图标，和 Embarcadero 全系列产品风格一致。&lt;/p&gt;
&lt;p&gt;不知道新版本 Delphi 软件中的图标是否也会相应改变。&lt;/p&gt;
&lt;p&gt;改变是好事情，真希望 Delphi 能把整个产品 UI 重新设计一下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/new-delphi-icons.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;</description></item><item><title>Delphi 2010 新功能及截图</title><link>https://www.delphier.com/posts/2009/delphi-2010-new-features-and-screenshots/</link><pubDate>Thu, 23 Apr 2009 00:00:00 +0000</pubDate><guid>https://www.delphier.com/posts/2009/delphi-2010-new-features-and-screenshots/</guid><description>&lt;p&gt;图来了！&lt;/p&gt;
&lt;p&gt;呵呵，毫不客气地说，Delphi 2010 这个版本可以算是 Delphi 的一个“里程碑”，为什么这么说？因为这个版本实现了几个 Delphi 应该有却一直没有的功能 🙂&lt;/p&gt;
&lt;p&gt;Delphi 2010 的新功能其实并不是很多，并没有那么“惊艳”，主要都集中在“细节”改进。&lt;/p&gt;
&lt;p&gt;首先来张 About，版本号是：Delphi 2010 version 14.0.3391.20582：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-new-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;目前发现有以下 5 点改进：&lt;/p&gt;
&lt;p&gt;1、Object Inspector 中的 Boolean 属性显示了 Checkbox&lt;/p&gt;
&lt;p&gt;这个改进比较明显，看下图就明白了，直接点击 Checkbox 即可改变 Boolean 的值；&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-new-2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2、可以用 Tab 键和 Shift+Tab 缩进代码了&lt;/p&gt;
&lt;p&gt;这个没法用图来说明，只能自己体会了，个人觉得，Delphi 1.0 就应该这么做 🙂&lt;/p&gt;
&lt;p&gt;3、可维护最近打开的 Projects 和 Files 列表&lt;/p&gt;
&lt;p&gt;在菜单 File-Reopen-Propeties 中，可设置最近打开 Projects 和 Files 的显示数量，并可删除、清空，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-new-3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-new-4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;4、代码编辑器的搜索功能增强&lt;/p&gt;
&lt;p&gt;看下图，效果和 Firefox 的搜索功能几乎一致，搜索框移到了下方，同时高亮搜索词：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-new-5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;5、代码自动完成增强：Auto Invoke&lt;/p&gt;
&lt;p&gt;刚才说“里程碑”，主要是指这个功能。&lt;/p&gt;
&lt;p&gt;当前的 Delphi 编辑器只有在输入“.”的时候，才会出现自动完成列表。在 Delphi 2010 中启用 Auto Invoke 功能后，当你输入任意一个字符的时候，都会出现匹配的自动完成列表，和 Visual Studio 差不多。&lt;/p&gt;
&lt;p&gt;Auto Invoke 默认是禁用的，在 Tools – Options 中启用：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-new-6.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;下图是输入 Show 后出现的自动完成列表，当然，当你输入第一个字母 S 的时候，自动完成列表已经开始匹配显示了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-new-7.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在 Visual Studio 中，当输入完赋值运算符后，可自动判断类型并显示枚举类型的值列表，当前的 Delphi 2010 还做不到这一点，不过当输入字符后，也是会按类型匹配的。看下图，会显示 Align 属性的可选值：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.delphier.com/images/2009/delphi2010-new-8.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;当前的 Auto Invoke 用的时候真的是很爽，不过有的时候还是有些问题，会不合时宜地出现，而且自动完成列表有时会匹配错误，编程时有被“干扰”的感觉，期望以后的版本能将其改进得更为“智能”。&lt;/p&gt;
&lt;p&gt;好了，暂时就这些，Delphi 2010 还会增加源码控制接口，并且提供一个 SVN 的实现和 Project Manager 整合，比较期待这个功能。&lt;/p&gt;</description></item><item><title>Delphi 2010 不错</title><link>https://www.delphier.com/posts/2009/nice-delphi2010/</link><pubDate>Wed, 22 Apr 2009 00:00:00 +0000</pubDate><guid>https://www.delphier.com/posts/2009/nice-delphi2010/</guid><description>&lt;p&gt;继上一篇 &lt;a href=&#34;https://www.delphier.com/posts/2009/delphi-2010/&#34;&gt;Delphi 2010&lt;/a&gt; 后，进行了进一步试用，发现此版本在一些细节功能方面改进不少，太好了！:)&lt;/p&gt;</description></item></channel></rss>